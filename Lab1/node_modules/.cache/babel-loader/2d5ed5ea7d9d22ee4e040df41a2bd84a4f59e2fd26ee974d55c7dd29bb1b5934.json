{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"MenuProps\", \"LabelProps\", \"InputProps\", \"error\", \"label\", \"hint\", \"value\", \"noOptionsText\", \"focusOnOpen\", \"onChange\", \"onOpen\", \"onClose\", \"getOptionDisabled\", \"multiple\", \"size\", \"disabled\", \"options\", \"background\", \"placeholder\", \"fullWidth\"];\nimport React, { useRef, useEffect, useState } from 'react';\nimport PT from 'prop-types';\nimport Cross from '@scaleflex/icons/cross';\nimport { intrinsicComponent, objectValues } from '../../utils/functions';\nimport { propTypes as labelPropTypes } from '../label/label.component';\nimport { propTypes as inputPropTypes } from '../input/input.component';\nimport Label from '../label';\nimport FormHint from '../form-hint';\nimport ArrowTick from '../arrow-tick';\nimport Input from '../input';\nimport Menu from '../menu';\nimport MenuItem from '../menu-item'; // TODO: refactor how implement tags in input\n// import Tag from '../tag';\n\nimport { InputBackgroundColor, InputSize } from '../../utils/types';\nimport Styled from './autocomplete.styles';\nvar Autocomplete = intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n    MenuProps = _ref.MenuProps,\n    LabelPropsData = _ref.LabelProps,\n    InputPropsData = _ref.InputProps,\n    error = _ref.error,\n    label = _ref.label,\n    hint = _ref.hint,\n    value = _ref.value,\n    _ref$noOptionsText = _ref.noOptionsText,\n    noOptionsText = _ref$noOptionsText === void 0 ? 'No options' : _ref$noOptionsText,\n    focusOnOpen = _ref.focusOnOpen,\n    onChange = _ref.onChange,\n    onOpen = _ref.onOpen,\n    onClose = _ref.onClose,\n    getOptionDisabled = _ref.getOptionDisabled,\n    multiple = _ref.multiple,\n    size = _ref.size,\n    disabled = _ref.disabled,\n    options = _ref.options,\n    background = _ref.background,\n    placeholder = _ref.placeholder,\n    fullWidth = _ref.fullWidth,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var inputRef = useRef(null);\n  var _useState = useState(multiple ? [] : ''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  var _useState3 = useState(options),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredOptions = _useState4[0],\n    setFilteredOptions = _useState4[1];\n  var _useState5 = useState(undefined),\n    _useState6 = _slicedToArray(_useState5, 2),\n    anchorEl = _useState6[0],\n    setAnchorEl = _useState6[1];\n  var _useState7 = useState(-1),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentItemIndex = _useState8[0],\n    setCurrentItemIndex = _useState8[1];\n  var open = Boolean(anchorEl);\n  var isItemSelected = selected.length > 0;\n  var handleOnChange = function handleOnChange(event, val) {\n    if (multiple) {\n      if (onChange) {\n        onChange(event, [].concat(_toConsumableArray(selected), [val]));\n      }\n    } else {\n      if (onChange) {\n        onChange(event, val);\n      }\n      setSelected('');\n      setCurrentItemIndex(-1);\n    }\n  }; // TODO: refactor how implement tags in input\n  // const handleOnRemoveItem = (event: any, itemIndex: number): void => {\n  //   const updatedSelectedItems = Array.isArray(selected)\n  //     ? selected.filter((_, index: number) => index !== itemIndex)\n  //     : '';\n  //   setSelected(updatedSelectedItems);\n  //   if (onChange) {\n  //     onChange(event, updatedSelectedItems);\n  //   }\n  // };\n\n  var handleOpenClick = function handleOpenClick(event) {\n    setAnchorEl(inputRef.current);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  var handleCloseClick = function handleCloseClick(event) {\n    setAnchorEl(undefined);\n    setCurrentItemIndex(-1);\n    if (onClose) {\n      onClose(event);\n    }\n  };\n  var handleClearIconClick = function handleClearIconClick(event) {\n    event === null || event === void 0 ? void 0 : event.stopPropagation();\n    if (multiple) {\n      if (onChange) {\n        onChange(event, []);\n      }\n      setSelected([]);\n    } else {\n      if (onChange) {\n        onChange(event, '');\n      }\n      setSelected('');\n      setCurrentItemIndex(-1);\n    }\n  };\n  var handleSelectedItem = function handleSelectedItem(event, item) {\n    // make sure this item isn't already selected\n    if (!multiple && selected !== item) {\n      handleOnChange(event, item);\n      if (multiple) {\n        setSelected(function (prev) {\n          return [].concat(_toConsumableArray(prev), [item]);\n        });\n      } else {\n        setSelected(item);\n      }\n    }\n    handleCloseClick(event);\n  };\n  var handleMenuItemClick = function handleMenuItemClick(event, item, index) {\n    // menu item shouldn't be clickable if it's disabled or = 'No options'\n    if (item === noOptionsText || getOptionDisabled && getOptionDisabled(item, index)) {\n      return undefined;\n    }\n    return handleSelectedItem(event, item);\n  };\n  var getValue = function getValue() {\n    if (multiple) {\n      var lastValue = value[value.length - 1];\n      if (selected.includes(lastValue)) {\n        return '';\n      }\n      return lastValue;\n    }\n    return value;\n  };\n  var handleInputChange = function handleInputChange(event) {\n    handleOnChange(event, event.currentTarget.value);\n    setAnchorEl(inputRef.current);\n  };\n  var getOptionIndex = function getOptionIndex(option) {\n    var optionIndex = -1;\n    if (_typeof(options[0]) === 'object') {\n      var optionObject = Object.entries(options).find(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          _ = _ref3[0],\n          optObject = _ref3[1];\n        return optObject.label === option;\n      });\n      if (optionObject) {\n        optionIndex = Number(optionObject[0]);\n      }\n    } else {\n      optionIndex = options.indexOf(option);\n    }\n    return optionIndex;\n  };\n  var getNextAvailableOption = function getNextAvailableOption(currentIndex, direction) {\n    while (currentIndex !== currentItemIndex) {\n      var selectedOption = filteredOptions[currentIndex];\n      var optionIndex = getOptionIndex(selectedOption);\n      var isDisabled = false;\n      if (getOptionDisabled && typeof selectedOption === 'string') {\n        isDisabled = getOptionDisabled(selectedOption, optionIndex);\n      }\n      if (!isDisabled) {\n        setCurrentItemIndex(currentIndex);\n        break;\n      }\n      if (direction === 'ArrowUp') {\n        if (currentIndex === 0) {\n          currentIndex = filteredOptions.length;\n        }\n        currentIndex -= 1;\n      }\n      if (direction === 'ArrowDown') {\n        if (currentIndex === filteredOptions.length - 1) {\n          currentIndex = -1;\n        }\n        currentIndex += 1;\n      }\n    }\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    if (open) {\n      if (event.key === 'ArrowUp') {\n        if (currentItemIndex > 0) {\n          getNextAvailableOption(currentItemIndex - 1, event.key);\n        } else {\n          getNextAvailableOption(filteredOptions.length - 1, event.key);\n        }\n      }\n      if (event.key === 'ArrowDown') {\n        if (currentItemIndex < filteredOptions.length - 1) {\n          getNextAvailableOption(currentItemIndex + 1, event.key);\n        } else {\n          getNextAvailableOption(0, event.key);\n        }\n      }\n      if (event.key === 'Enter' && currentItemIndex >= 0) {\n        var selectedOption = filteredOptions[currentItemIndex];\n        if (typeof selectedOption === 'string') {\n          handleSelectedItem(event, selectedOption);\n        }\n      }\n      if (event.key === 'Escape') {\n        handleCloseClick(event);\n      }\n    }\n  }; // TODO: refactor how implement tags in input\n  // const getMultipleFilteredOptions = (): void => {\n  //   if (isItemSelected) {\n  //     // lastValue = selectedItem | enteredValue\n  //     // [\"item1\",\"ite\"]\n  //     const lastValue = value[value.length - 1];\n  //     const filteredMenuOptions = selected.includes(lastValue)\n  //       ? options\n  //       : options?.filter((option: string) => option.includes(lastValue));\n  //     setFilteredOptions(filteredMenuOptions || []);\n  //   } else {\n  //     // filter menu options based on the value[0] as it's an array in multiple mode\n  //     const filteredMenuOptions = options?.filter((option: any) => option.includes(value[0]));\n  //     setFilteredOptions(filteredMenuOptions || []);\n  //   }\n  // };\n\n  var getFilteredOptions = function getFilteredOptions() {\n    var filteredMenuOptions = _typeof(options[0]) === 'object' ? options.map(function (option) {\n      return option.label;\n    }) : options;\n    if (!isItemSelected) {\n      filteredMenuOptions = filteredMenuOptions.filter(function (option) {\n        return option.includes(value);\n      });\n    }\n    setFilteredOptions(filteredMenuOptions || []);\n  };\n  var renderLabel = function renderLabel() {\n    if (label) {\n      if (typeof label === 'function') {\n        return label({\n          error: error\n        });\n      }\n      if (_typeof(label) === 'object') {\n        return label;\n      }\n      return /*#__PURE__*/React.createElement(Label, _extends({\n        error: error\n      }, LabelPropsData || {}), label);\n    }\n    return null;\n  }; // TODO: refactor how implement tags in input\n  // const renderTags = (): JSX.Element[] | JSX.Element | boolean | undefined => {\n  //   if (multiple && isItemSelected && Array.isArray(selected)) {\n  //     return selected.map((item: string, index: number) => (\n  //       <Tag\n  //         key={index}\n  //         tagIndex={index}\n  //         style={{ margin: '0px 4px 4px 0px' }}\n  //         onRemove={(_, event) => handleOnRemoveItem(event, index)}\n  //       >\n  //         {item}\n  //       </Tag>\n  //     ));\n  //   }\n  // };\n\n  var renderHint = function renderHint() {\n    if (hint) {\n      if (typeof hint === 'function') {\n        return hint({\n          error: error\n        });\n      }\n      if (_typeof(hint) === 'object') {\n        return hint;\n      }\n      return /*#__PURE__*/React.createElement(FormHint, {\n        error: error\n      }, hint);\n    }\n    return null;\n  };\n  var renderMenuItem = function renderMenuItem(item, index) {\n    var optionIndex = getOptionIndex(item);\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: optionIndex,\n      value: item,\n      noOptionsText: item === noOptionsText,\n      disabled: getOptionDisabled && getOptionDisabled(item, optionIndex),\n      active: multiple && selected.includes(item) || item === selected || index === currentItemIndex,\n      onClick: function onClick(event) {\n        return handleMenuItemClick(event, item, optionIndex);\n      },\n      enableScrollIntoView: true\n    }, item);\n  };\n  useEffect(function () {\n    if (focusOnOpen) setAnchorEl(inputRef.current);\n  }, [focusOnOpen]);\n  useEffect(function () {\n    if (isItemSelected) {\n      filteredOptions.map(function (option, index) {\n        if (option === selected) {\n          setCurrentItemIndex(index);\n        }\n        return null;\n      });\n    }\n  }, [anchorEl]);\n  useEffect(function () {\n    if (multiple && (value === null || value === void 0 ? void 0 : value.length) > 0) {// TODO: refactor how implement tags in input\n      // getMultipleFilteredOptions();\n    } else {\n      getFilteredOptions();\n    }\n  }, [value, anchorEl]);\n  useEffect(function () {\n    if ((filteredOptions === null || filteredOptions === void 0 ? void 0 : filteredOptions.length) === 0) {\n      setFilteredOptions([noOptionsText]);\n    }\n  }, [filteredOptions, value]);\n  return /*#__PURE__*/React.createElement(Styled.Autocomplete, _extends({\n    ref: ref\n  }, rest), renderLabel(), /*#__PURE__*/React.createElement(Styled.AutocompleteContainer, {\n    onClick: disabled ? undefined : handleOpenClick\n  }, /*#__PURE__*/React.createElement(Input, _extends({}, InputPropsData || {}, {\n    ref: inputRef,\n    size: size,\n    value: getValue() // TODO: refactor how implement tags in input\n    // renderTags={renderTags()}\n    ,\n\n    readOnly: disabled,\n    focusOnMount: focusOnOpen,\n    background: background,\n    onKeyDown: handleKeyDown,\n    onChange: handleInputChange,\n    placeholder: placeholder,\n    fullWidth: fullWidth,\n    iconEnd: function iconEnd() {\n      return /*#__PURE__*/React.createElement(ArrowTick, {\n        onClick: disabled ? undefined : handleOpenClick,\n        type: open ? 'top' : 'bottom',\n        IconProps: {\n          size: 10\n        }\n      });\n    },\n    clearIcon: isItemSelected && /*#__PURE__*/React.createElement(Cross, {\n      size: 12\n    }),\n    clearIconClick: handleClearIconClick\n  }))), /*#__PURE__*/React.createElement(Menu, _extends({\n    onClose: handleCloseClick,\n    open: open,\n    anchorEl: anchorEl,\n    style: {\n      maxHeight: '250px'\n    }\n  }, MenuProps), _typeof(filteredOptions[0]) === 'object' ? Object.values(filteredOptions).map(function (option, index) {\n    return renderMenuItem(option.label, index);\n  }) : filteredOptions === null || filteredOptions === void 0 ? void 0 : filteredOptions.map(function (item, index) {\n    return renderMenuItem(item, index);\n  })), renderHint());\n});\nAutocomplete.defaultProps = {\n  size: InputSize.Md,\n  background: InputBackgroundColor.Primary,\n  // multiple: false,\n  disabled: false\n};\nAutocomplete.propTypes = {\n  children: PT.oneOfType([PT.element, PT.arrayOf(PT.element)]),\n  size: PT.oneOf(objectValues(InputSize)),\n  LabelProps: PT.exact(labelPropTypes),\n  InputProps: PT.exact(inputPropTypes),\n  background: PT.oneOf(objectValues(InputBackgroundColor)),\n  value: PT.oneOfType([PT.string, PT.array]).isRequired,\n  label: PT.node,\n  hint: PT.node,\n  options: PT.array.isRequired,\n  noOptionsText: PT.string,\n  placeholder: PT.string,\n  fullWidth: PT.bool,\n  multiple: PT.bool,\n  disabled: PT.bool,\n  focusOnOpen: PT.bool,\n  error: PT.bool,\n  onChange: PT.func,\n  onOpen: PT.func,\n  onClose: PT.func,\n  getOptionDisabled: PT.func\n};\nexport default Autocomplete;","map":{"version":3,"names":["_extends","_typeof","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","React","useRef","useEffect","useState","PT","Cross","intrinsicComponent","objectValues","propTypes","labelPropTypes","inputPropTypes","Label","FormHint","ArrowTick","Input","Menu","MenuItem","InputBackgroundColor","InputSize","Styled","Autocomplete","_ref","ref","children","MenuProps","LabelPropsData","LabelProps","InputPropsData","InputProps","error","label","hint","value","_ref$noOptionsText","noOptionsText","focusOnOpen","onChange","onOpen","onClose","getOptionDisabled","multiple","size","disabled","options","background","placeholder","fullWidth","rest","inputRef","_useState","_useState2","selected","setSelected","_useState3","_useState4","filteredOptions","setFilteredOptions","_useState5","undefined","_useState6","anchorEl","setAnchorEl","_useState7","_useState8","currentItemIndex","setCurrentItemIndex","open","Boolean","isItemSelected","length","handleOnChange","event","val","concat","handleOpenClick","current","handleCloseClick","handleClearIconClick","stopPropagation","handleSelectedItem","item","prev","handleMenuItemClick","index","getValue","lastValue","includes","handleInputChange","currentTarget","getOptionIndex","option","optionIndex","optionObject","Object","entries","find","_ref2","_ref3","_","optObject","Number","indexOf","getNextAvailableOption","currentIndex","direction","selectedOption","isDisabled","handleKeyDown","key","getFilteredOptions","filteredMenuOptions","map","filter","renderLabel","createElement","renderHint","renderMenuItem","active","onClick","enableScrollIntoView","AutocompleteContainer","readOnly","focusOnMount","onKeyDown","iconEnd","type","IconProps","clearIcon","clearIconClick","style","maxHeight","values","defaultProps","Md","Primary","oneOfType","element","arrayOf","oneOf","exact","string","array","isRequired","node","bool","func"],"sources":["/home/redundunt/WebstormProjects/untitled/node_modules/@scaleflex/ui/core/autocomplete/autocomplete.component.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"MenuProps\", \"LabelProps\", \"InputProps\", \"error\", \"label\", \"hint\", \"value\", \"noOptionsText\", \"focusOnOpen\", \"onChange\", \"onOpen\", \"onClose\", \"getOptionDisabled\", \"multiple\", \"size\", \"disabled\", \"options\", \"background\", \"placeholder\", \"fullWidth\"];\nimport React, { useRef, useEffect, useState } from 'react';\nimport PT from 'prop-types';\nimport Cross from '@scaleflex/icons/cross';\nimport { intrinsicComponent, objectValues } from '../../utils/functions';\nimport { propTypes as labelPropTypes } from '../label/label.component';\nimport { propTypes as inputPropTypes } from '../input/input.component';\nimport Label from '../label';\nimport FormHint from '../form-hint';\nimport ArrowTick from '../arrow-tick';\nimport Input from '../input';\nimport Menu from '../menu';\nimport MenuItem from '../menu-item'; // TODO: refactor how implement tags in input\n// import Tag from '../tag';\n\nimport { InputBackgroundColor, InputSize } from '../../utils/types';\nimport Styled from './autocomplete.styles';\nvar Autocomplete = intrinsicComponent(function (_ref, ref) {\n  var children = _ref.children,\n      MenuProps = _ref.MenuProps,\n      LabelPropsData = _ref.LabelProps,\n      InputPropsData = _ref.InputProps,\n      error = _ref.error,\n      label = _ref.label,\n      hint = _ref.hint,\n      value = _ref.value,\n      _ref$noOptionsText = _ref.noOptionsText,\n      noOptionsText = _ref$noOptionsText === void 0 ? 'No options' : _ref$noOptionsText,\n      focusOnOpen = _ref.focusOnOpen,\n      onChange = _ref.onChange,\n      onOpen = _ref.onOpen,\n      onClose = _ref.onClose,\n      getOptionDisabled = _ref.getOptionDisabled,\n      multiple = _ref.multiple,\n      size = _ref.size,\n      disabled = _ref.disabled,\n      options = _ref.options,\n      background = _ref.background,\n      placeholder = _ref.placeholder,\n      fullWidth = _ref.fullWidth,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(multiple ? [] : ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(options),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredOptions = _useState4[0],\n      setFilteredOptions = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      anchorEl = _useState6[0],\n      setAnchorEl = _useState6[1];\n\n  var _useState7 = useState(-1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentItemIndex = _useState8[0],\n      setCurrentItemIndex = _useState8[1];\n\n  var open = Boolean(anchorEl);\n  var isItemSelected = selected.length > 0;\n\n  var handleOnChange = function handleOnChange(event, val) {\n    if (multiple) {\n      if (onChange) {\n        onChange(event, [].concat(_toConsumableArray(selected), [val]));\n      }\n    } else {\n      if (onChange) {\n        onChange(event, val);\n      }\n\n      setSelected('');\n      setCurrentItemIndex(-1);\n    }\n  }; // TODO: refactor how implement tags in input\n  // const handleOnRemoveItem = (event: any, itemIndex: number): void => {\n  //   const updatedSelectedItems = Array.isArray(selected)\n  //     ? selected.filter((_, index: number) => index !== itemIndex)\n  //     : '';\n  //   setSelected(updatedSelectedItems);\n  //   if (onChange) {\n  //     onChange(event, updatedSelectedItems);\n  //   }\n  // };\n\n\n  var handleOpenClick = function handleOpenClick(event) {\n    setAnchorEl(inputRef.current);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleCloseClick = function handleCloseClick(event) {\n    setAnchorEl(undefined);\n    setCurrentItemIndex(-1);\n\n    if (onClose) {\n      onClose(event);\n    }\n  };\n\n  var handleClearIconClick = function handleClearIconClick(event) {\n    event === null || event === void 0 ? void 0 : event.stopPropagation();\n\n    if (multiple) {\n      if (onChange) {\n        onChange(event, []);\n      }\n\n      setSelected([]);\n    } else {\n      if (onChange) {\n        onChange(event, '');\n      }\n\n      setSelected('');\n      setCurrentItemIndex(-1);\n    }\n  };\n\n  var handleSelectedItem = function handleSelectedItem(event, item) {\n    // make sure this item isn't already selected\n    if (!multiple && selected !== item) {\n      handleOnChange(event, item);\n\n      if (multiple) {\n        setSelected(function (prev) {\n          return [].concat(_toConsumableArray(prev), [item]);\n        });\n      } else {\n        setSelected(item);\n      }\n    }\n\n    handleCloseClick(event);\n  };\n\n  var handleMenuItemClick = function handleMenuItemClick(event, item, index) {\n    // menu item shouldn't be clickable if it's disabled or = 'No options'\n    if (item === noOptionsText || getOptionDisabled && getOptionDisabled(item, index)) {\n      return undefined;\n    }\n\n    return handleSelectedItem(event, item);\n  };\n\n  var getValue = function getValue() {\n    if (multiple) {\n      var lastValue = value[value.length - 1];\n\n      if (selected.includes(lastValue)) {\n        return '';\n      }\n\n      return lastValue;\n    }\n\n    return value;\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    handleOnChange(event, event.currentTarget.value);\n    setAnchorEl(inputRef.current);\n  };\n\n  var getOptionIndex = function getOptionIndex(option) {\n    var optionIndex = -1;\n\n    if (_typeof(options[0]) === 'object') {\n      var optionObject = Object.entries(options).find(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            _ = _ref3[0],\n            optObject = _ref3[1];\n\n        return optObject.label === option;\n      });\n\n      if (optionObject) {\n        optionIndex = Number(optionObject[0]);\n      }\n    } else {\n      optionIndex = options.indexOf(option);\n    }\n\n    return optionIndex;\n  };\n\n  var getNextAvailableOption = function getNextAvailableOption(currentIndex, direction) {\n    while (currentIndex !== currentItemIndex) {\n      var selectedOption = filteredOptions[currentIndex];\n      var optionIndex = getOptionIndex(selectedOption);\n      var isDisabled = false;\n\n      if (getOptionDisabled && typeof selectedOption === 'string') {\n        isDisabled = getOptionDisabled(selectedOption, optionIndex);\n      }\n\n      if (!isDisabled) {\n        setCurrentItemIndex(currentIndex);\n        break;\n      }\n\n      if (direction === 'ArrowUp') {\n        if (currentIndex === 0) {\n          currentIndex = filteredOptions.length;\n        }\n\n        currentIndex -= 1;\n      }\n\n      if (direction === 'ArrowDown') {\n        if (currentIndex === filteredOptions.length - 1) {\n          currentIndex = -1;\n        }\n\n        currentIndex += 1;\n      }\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (open) {\n      if (event.key === 'ArrowUp') {\n        if (currentItemIndex > 0) {\n          getNextAvailableOption(currentItemIndex - 1, event.key);\n        } else {\n          getNextAvailableOption(filteredOptions.length - 1, event.key);\n        }\n      }\n\n      if (event.key === 'ArrowDown') {\n        if (currentItemIndex < filteredOptions.length - 1) {\n          getNextAvailableOption(currentItemIndex + 1, event.key);\n        } else {\n          getNextAvailableOption(0, event.key);\n        }\n      }\n\n      if (event.key === 'Enter' && currentItemIndex >= 0) {\n        var selectedOption = filteredOptions[currentItemIndex];\n\n        if (typeof selectedOption === 'string') {\n          handleSelectedItem(event, selectedOption);\n        }\n      }\n\n      if (event.key === 'Escape') {\n        handleCloseClick(event);\n      }\n    }\n  }; // TODO: refactor how implement tags in input\n  // const getMultipleFilteredOptions = (): void => {\n  //   if (isItemSelected) {\n  //     // lastValue = selectedItem | enteredValue\n  //     // [\"item1\",\"ite\"]\n  //     const lastValue = value[value.length - 1];\n  //     const filteredMenuOptions = selected.includes(lastValue)\n  //       ? options\n  //       : options?.filter((option: string) => option.includes(lastValue));\n  //     setFilteredOptions(filteredMenuOptions || []);\n  //   } else {\n  //     // filter menu options based on the value[0] as it's an array in multiple mode\n  //     const filteredMenuOptions = options?.filter((option: any) => option.includes(value[0]));\n  //     setFilteredOptions(filteredMenuOptions || []);\n  //   }\n  // };\n\n\n  var getFilteredOptions = function getFilteredOptions() {\n    var filteredMenuOptions = _typeof(options[0]) === 'object' ? options.map(function (option) {\n      return option.label;\n    }) : options;\n\n    if (!isItemSelected) {\n      filteredMenuOptions = filteredMenuOptions.filter(function (option) {\n        return option.includes(value);\n      });\n    }\n\n    setFilteredOptions(filteredMenuOptions || []);\n  };\n\n  var renderLabel = function renderLabel() {\n    if (label) {\n      if (typeof label === 'function') {\n        return label({\n          error: error\n        });\n      }\n\n      if (_typeof(label) === 'object') {\n        return label;\n      }\n\n      return /*#__PURE__*/React.createElement(Label, _extends({\n        error: error\n      }, LabelPropsData || {}), label);\n    }\n\n    return null;\n  }; // TODO: refactor how implement tags in input\n  // const renderTags = (): JSX.Element[] | JSX.Element | boolean | undefined => {\n  //   if (multiple && isItemSelected && Array.isArray(selected)) {\n  //     return selected.map((item: string, index: number) => (\n  //       <Tag\n  //         key={index}\n  //         tagIndex={index}\n  //         style={{ margin: '0px 4px 4px 0px' }}\n  //         onRemove={(_, event) => handleOnRemoveItem(event, index)}\n  //       >\n  //         {item}\n  //       </Tag>\n  //     ));\n  //   }\n  // };\n\n\n  var renderHint = function renderHint() {\n    if (hint) {\n      if (typeof hint === 'function') {\n        return hint({\n          error: error\n        });\n      }\n\n      if (_typeof(hint) === 'object') {\n        return hint;\n      }\n\n      return /*#__PURE__*/React.createElement(FormHint, {\n        error: error\n      }, hint);\n    }\n\n    return null;\n  };\n\n  var renderMenuItem = function renderMenuItem(item, index) {\n    var optionIndex = getOptionIndex(item);\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: optionIndex,\n      value: item,\n      noOptionsText: item === noOptionsText,\n      disabled: getOptionDisabled && getOptionDisabled(item, optionIndex),\n      active: multiple && selected.includes(item) || item === selected || index === currentItemIndex,\n      onClick: function onClick(event) {\n        return handleMenuItemClick(event, item, optionIndex);\n      },\n      enableScrollIntoView: true\n    }, item);\n  };\n\n  useEffect(function () {\n    if (focusOnOpen) setAnchorEl(inputRef.current);\n  }, [focusOnOpen]);\n  useEffect(function () {\n    if (isItemSelected) {\n      filteredOptions.map(function (option, index) {\n        if (option === selected) {\n          setCurrentItemIndex(index);\n        }\n\n        return null;\n      });\n    }\n  }, [anchorEl]);\n  useEffect(function () {\n    if (multiple && (value === null || value === void 0 ? void 0 : value.length) > 0) {// TODO: refactor how implement tags in input\n      // getMultipleFilteredOptions();\n    } else {\n      getFilteredOptions();\n    }\n  }, [value, anchorEl]);\n  useEffect(function () {\n    if ((filteredOptions === null || filteredOptions === void 0 ? void 0 : filteredOptions.length) === 0) {\n      setFilteredOptions([noOptionsText]);\n    }\n  }, [filteredOptions, value]);\n  return /*#__PURE__*/React.createElement(Styled.Autocomplete, _extends({\n    ref: ref\n  }, rest), renderLabel(), /*#__PURE__*/React.createElement(Styled.AutocompleteContainer, {\n    onClick: disabled ? undefined : handleOpenClick\n  }, /*#__PURE__*/React.createElement(Input, _extends({}, InputPropsData || {}, {\n    ref: inputRef,\n    size: size,\n    value: getValue() // TODO: refactor how implement tags in input\n    // renderTags={renderTags()}\n    ,\n    readOnly: disabled,\n    focusOnMount: focusOnOpen,\n    background: background,\n    onKeyDown: handleKeyDown,\n    onChange: handleInputChange,\n    placeholder: placeholder,\n    fullWidth: fullWidth,\n    iconEnd: function iconEnd() {\n      return /*#__PURE__*/React.createElement(ArrowTick, {\n        onClick: disabled ? undefined : handleOpenClick,\n        type: open ? 'top' : 'bottom',\n        IconProps: {\n          size: 10\n        }\n      });\n    },\n    clearIcon: isItemSelected && /*#__PURE__*/React.createElement(Cross, {\n      size: 12\n    }),\n    clearIconClick: handleClearIconClick\n  }))), /*#__PURE__*/React.createElement(Menu, _extends({\n    onClose: handleCloseClick,\n    open: open,\n    anchorEl: anchorEl,\n    style: {\n      maxHeight: '250px'\n    }\n  }, MenuProps), _typeof(filteredOptions[0]) === 'object' ? Object.values(filteredOptions).map(function (option, index) {\n    return renderMenuItem(option.label, index);\n  }) : filteredOptions === null || filteredOptions === void 0 ? void 0 : filteredOptions.map(function (item, index) {\n    return renderMenuItem(item, index);\n  })), renderHint());\n});\nAutocomplete.defaultProps = {\n  size: InputSize.Md,\n  background: InputBackgroundColor.Primary,\n  // multiple: false,\n  disabled: false\n};\nAutocomplete.propTypes = {\n  children: PT.oneOfType([PT.element, PT.arrayOf(PT.element)]),\n  size: PT.oneOf(objectValues(InputSize)),\n  LabelProps: PT.exact(labelPropTypes),\n  InputProps: PT.exact(inputPropTypes),\n  background: PT.oneOf(objectValues(InputBackgroundColor)),\n  value: PT.oneOfType([PT.string, PT.array]).isRequired,\n  label: PT.node,\n  hint: PT.node,\n  options: PT.array.isRequired,\n  noOptionsText: PT.string,\n  placeholder: PT.string,\n  fullWidth: PT.bool,\n  multiple: PT.bool,\n  disabled: PT.bool,\n  focusOnOpen: PT.bool,\n  error: PT.bool,\n  onChange: PT.func,\n  onOpen: PT.func,\n  onClose: PT.func,\n  getOptionDisabled: PT.func\n};\nexport default Autocomplete;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}