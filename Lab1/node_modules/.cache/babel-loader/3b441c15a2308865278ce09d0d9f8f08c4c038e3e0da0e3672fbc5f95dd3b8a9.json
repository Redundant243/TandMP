{"ast":null,"code":"var _jsxFileName = \"/home/redundunt/WebstormProjects/untitled/src/components/Button.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadAndDisplayImage = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload and Display Image usign React Hook's\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"not found\",\n        width: \"250px\",\n        src: URL.createObjectURL(selectedImage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedImage(null),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"not found\",\n        width: \"250px\",\n        src: URL.createObjectURL(selectedImage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"myImage\",\n      onChange: event => {\n        console.log(event.target.files[0]);\n        setSelectedImage(event.target.files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this); /*\n            const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n            const openImgEditor = () => {\n              setIsImgEditorShown(true);\n            };\n            const closeImgEditor = () => {\n              setIsImgEditorShown(false);\n            };\n            return (\n              <div>\n                  <button onClick={openImgEditor}>Open Filerobot image editor</button>\n                  {isImgEditorShown && (\n                      <FilerobotImageEditor\n                          source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                          onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                          onClose={closeImgEditor}\n                          annotationsCommon={{\n                              fill: '#ff0000'\n                          }}\n                          Text={{ text: 'Filerobot...' }}\n                          Crop={{\n                              presetsItems: [\n                                  {\n                                      titleKey: 'classicTv',\n                                      descriptionKey: '4:3',\n                                      ratio: 4 / 3,\n                                      // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                                  },\n                                  {\n                                      titleKey: 'cinemascope',\n                                      descriptionKey: '21:9',\n                                      ratio: 21 / 9,\n                                      // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                                  },\n                              ],\n                              presetsFolders: [\n                                  {\n                                      titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                      // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                      groups: [\n                                          {\n                                              titleKey: 'facebook',\n                                              items: [\n                                                  {\n                                                      titleKey: 'profile',\n                                                      width: 180,\n                                                      height: 180,\n                                                      descriptionKey: 'fbProfileSize',\n                                                  },\n                                                  {\n                                                      titleKey: 'coverPhoto',\n                                                      width: 820,\n                                                      height: 312,\n                                                      descriptionKey: 'fbCoverPhotoSize',\n                                                  },\n                                              ],\n                                          },\n                                      ],\n                                  },\n                              ],\n                          }}\n                          tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                          defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                          defaultToolId={TOOLS.TEXT} // or 'Text'\n                      />\n                  )}\n              </div>\n            );*/\n};\n_s(UploadAndDisplayImage, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = UploadAndDisplayImage;\nexport default UploadAndDisplayImage;\nvar _c;\n$RefreshReg$(_c, \"UploadAndDisplayImage\");","map":{"version":3,"names":["React","useState","FilerobotImageEditor","TABS","TOOLS","jsxDEV","_jsxDEV","UploadAndDisplayImage","_s","selectedImage","setSelectedImage","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","width","src","URL","createObjectURL","onClick","type","name","onChange","event","console","log","target","files","_c","$RefreshReg$"],"sources":["/home/redundunt/WebstormProjects/untitled/src/components/Button.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nconst UploadAndDisplayImage = () => {\n\n\n\n    const [selectedImage, setSelectedImage] = useState(null);\n    return (\n        <div>\n            <h1>Upload and Display Image usign React Hook's</h1>\n\n            {selectedImage && (\n                <div>\n                    <img\n                        alt=\"not found\"\n                        width={\"250px\"}\n                        src={URL.createObjectURL(selectedImage)}\n                    />\n\n\n                    <br />\n                    <button onClick={() => setSelectedImage(null)}>Remove</button>\n                    <img\n                        alt=\"not found\"\n                        width={\"250px\"}\n                        src={URL.createObjectURL(selectedImage)}\n                    />\n                </div>\n            )}\n\n            <br />\n            <br />\n\n            <input\n                type=\"file\"\n                name=\"myImage\"\n                onChange={(event) => {\n                    console.log(event.target.files[0]);\n                    setSelectedImage(event.target.files[0]);\n                }}\n            />\n        </div>\n    );/*\n    const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n\n    const openImgEditor = () => {\n        setIsImgEditorShown(true);\n    };\n\n    const closeImgEditor = () => {\n        setIsImgEditorShown(false);\n    };\n\n    return (\n        <div>\n            <button onClick={openImgEditor}>Open Filerobot image editor</button>\n            {isImgEditorShown && (\n                <FilerobotImageEditor\n                    source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                    onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                    onClose={closeImgEditor}\n                    annotationsCommon={{\n                        fill: '#ff0000'\n                    }}\n                    Text={{ text: 'Filerobot...' }}\n                    Crop={{\n                        presetsItems: [\n                            {\n                                titleKey: 'classicTv',\n                                descriptionKey: '4:3',\n                                ratio: 4 / 3,\n                                // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                            },\n                            {\n                                titleKey: 'cinemascope',\n                                descriptionKey: '21:9',\n                                ratio: 21 / 9,\n                                // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                            },\n                        ],\n                        presetsFolders: [\n                            {\n                                titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                groups: [\n                                    {\n                                        titleKey: 'facebook',\n                                        items: [\n                                            {\n                                                titleKey: 'profile',\n                                                width: 180,\n                                                height: 180,\n                                                descriptionKey: 'fbProfileSize',\n                                            },\n                                            {\n                                                titleKey: 'coverPhoto',\n                                                width: 820,\n                                                height: 312,\n                                                descriptionKey: 'fbCoverPhotoSize',\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                        ],\n                    }}\n                    tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                    defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                    defaultToolId={TOOLS.TEXT} // or 'Text'\n                />\n            )}\n        </div>\n    );*/\n};\n\nexport default UploadAndDisplayImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,oBAAoB,IAAIC,IAAI,EAAEC,KAAK,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAIhC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxD,oBACIK,OAAA;IAAAK,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEnDN,aAAa,iBACVH,OAAA;MAAAK,QAAA,gBACIL,OAAA;QACIU,GAAG,EAAC,WAAW;QACfC,KAAK,EAAE,OAAQ;QACfC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACX,aAAa;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1C,eAGFT,OAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACNT,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,IAAI,CAAE;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC9DT,OAAA;QACIU,GAAG,EAAC,WAAW;QACfC,KAAK,EAAE,OAAQ;QACfC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACX,aAAa;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAET,eAEDT,OAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNT,OAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAENT,OAAA;MACIgB,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,SAAS;MACdC,QAAQ,EAAGC,KAAK,IAAK;QACjBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClCnB,gBAAgB,CAACe,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC3C;IAAE;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA,CACR;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CAAC;AAACP,EAAA,CA/GID,qBAAqB;AAAAuB,EAAA,GAArBvB,qBAAqB;AAiH3B,eAAeA,qBAAqB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}