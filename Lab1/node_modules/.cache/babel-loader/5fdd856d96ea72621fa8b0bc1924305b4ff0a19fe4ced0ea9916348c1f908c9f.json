{"ast":null,"code":"import React, { useState } from \"react\";\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nconst UploadAndDisplayImage = () => {\n\n  /*    const [selectedImage, setSelectedImage] = useState(null);\n      return (\n          <div>\n              <h1>Upload and Display Image using React Hook's</h1>\n  \n              {selectedImage && (\n                  <div>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n  \n  \n                      <br />\n                      <button onClick={() => setSelectedImage(null)}>Remove</button>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n                  </div>\n              )}\n  \n              <br />\n              <br />\n  \n              <input\n                  type=\"file\"\n                  name=\"myImage\"\n                  onChange={(event) => {\n                      console.log(event.target.files[0]);\n                      setSelectedImage(event.target.files[0]);\n                  }}\n              />\n          </div>\n      );\n      const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n  \n      const openImgEditor = () => {\n          setIsImgEditorShown(true);\n      };\n  \n      const closeImgEditor = () => {\n          setIsImgEditorShown(false);\n      };\n  \n      return (\n          <div>\n              <button onClick={openImgEditor}>Open Filerobot image editor</button>\n              {isImgEditorShown && (\n                  <FilerobotImageEditor\n                      source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                      onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                      onClose={closeImgEditor}\n                      annotationsCommon={{\n                          fill: '#ff0000'\n                      }}\n                      Text={{ text: 'Filerobot...' }}\n                      Crop={{\n                          presetsItems: [\n                              {\n                                  titleKey: 'classicTv',\n                                  descriptionKey: '4:3',\n                                  ratio: 4 / 3,\n                                  // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                              },\n                              {\n                                  titleKey: 'cinemascope',\n                                  descriptionKey: '21:9',\n                                  ratio: 21 / 9,\n                                  // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                              },\n                          ],\n                          presetsFolders: [\n                              {\n                                  titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                  // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                  groups: [\n                                      {\n                                          titleKey: 'facebook',\n                                          items: [\n                                              {\n                                                  titleKey: 'profile',\n                                                  width: 180,\n                                                  height: 180,\n                                                  descriptionKey: 'fbProfileSize',\n                                              },\n                                              {\n                                                  titleKey: 'coverPhoto',\n                                                  width: 820,\n                                                  height: 312,\n                                                  descriptionKey: 'fbCoverPhotoSize',\n                                              },\n                                          ],\n                                      },\n                                  ],\n                              },\n                          ],\n                      }}\n                      tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                      defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                      defaultToolId={TOOLS.TEXT} // or 'Text'\n                  />\n              )}\n          </div>\n      );*/\n};\n_c = UploadAndDisplayImage;\nexport default UploadAndDisplayImage;\nvar _c;\n$RefreshReg$(_c, \"UploadAndDisplayImage\");","map":{"version":3,"names":["React","useState","FilerobotImageEditor","TABS","TOOLS","UploadAndDisplayImage","_c","$RefreshReg$"],"sources":["/home/redundunt/WebstormProjects/untitled/src/components/Button.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nconst UploadAndDisplayImage = () => {\n    \n\n\n/*    const [selectedImage, setSelectedImage] = useState(null);\n    return (\n        <div>\n            <h1>Upload and Display Image using React Hook's</h1>\n\n            {selectedImage && (\n                <div>\n                    <img\n                        alt=\"not found\"\n                        width={\"250px\"}\n                        src={URL.createObjectURL(selectedImage)}\n                    />\n\n\n                    <br />\n                    <button onClick={() => setSelectedImage(null)}>Remove</button>\n                    <img\n                        alt=\"not found\"\n                        width={\"250px\"}\n                        src={URL.createObjectURL(selectedImage)}\n                    />\n                </div>\n            )}\n\n            <br />\n            <br />\n\n            <input\n                type=\"file\"\n                name=\"myImage\"\n                onChange={(event) => {\n                    console.log(event.target.files[0]);\n                    setSelectedImage(event.target.files[0]);\n                }}\n            />\n        </div>\n    );\n    const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n\n    const openImgEditor = () => {\n        setIsImgEditorShown(true);\n    };\n\n    const closeImgEditor = () => {\n        setIsImgEditorShown(false);\n    };\n\n    return (\n        <div>\n            <button onClick={openImgEditor}>Open Filerobot image editor</button>\n            {isImgEditorShown && (\n                <FilerobotImageEditor\n                    source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                    onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                    onClose={closeImgEditor}\n                    annotationsCommon={{\n                        fill: '#ff0000'\n                    }}\n                    Text={{ text: 'Filerobot...' }}\n                    Crop={{\n                        presetsItems: [\n                            {\n                                titleKey: 'classicTv',\n                                descriptionKey: '4:3',\n                                ratio: 4 / 3,\n                                // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                            },\n                            {\n                                titleKey: 'cinemascope',\n                                descriptionKey: '21:9',\n                                ratio: 21 / 9,\n                                // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                            },\n                        ],\n                        presetsFolders: [\n                            {\n                                titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                groups: [\n                                    {\n                                        titleKey: 'facebook',\n                                        items: [\n                                            {\n                                                titleKey: 'profile',\n                                                width: 180,\n                                                height: 180,\n                                                descriptionKey: 'fbProfileSize',\n                                            },\n                                            {\n                                                titleKey: 'coverPhoto',\n                                                width: 820,\n                                                height: 312,\n                                                descriptionKey: 'fbCoverPhotoSize',\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                        ],\n                    }}\n                    tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                    defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                    defaultToolId={TOOLS.TEXT} // or 'Text'\n                />\n            )}\n        </div>\n    );*/\n};\n\nexport default UploadAndDisplayImage;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,oBAAoB,IAAIC,IAAI,EAAEC,KAAK,QAAQ,8BAA8B;AAChF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;;EAIpqBAAqB;AAiH3B,eAAeA,qBAAqB;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}