{"ast":null,"code":"var _jsxFileName = \"/home/redundunt/WebstormProjects/untitled/src/components/Button.js\";\nimport React, { useState } from \"react\";\nimport canvas from \"react\";\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadAndDisplayImage = () => {\n  document.getElementById('inp').onchange = function (e) {\n    var img = new Image();\n    img.onload = draw;\n    img.onerror = failed;\n    img.src = URL.createObjectURL(this.files[0]);\n  };\n  function draw() {\n    var canvas = document.getElementById('canvas');\n    canvas.width = this.width;\n    canvas.height = this.height;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(this, 0, 0);\n  }\n  function failed() {\n    console.error(\"The provided file couldn't be loaded as an Image media\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n\n  /*    const [selectedImage, setSelectedImage] = useState(null);\n      return (\n          <div>\n              <h1>Upload and Display Image using React Hook's</h1>\n               {selectedImage && (\n                  <div>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n                        <br />\n                      <button onClick={() => setSelectedImage(null)}>Remove</button>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n                  </div>\n              )}\n               <br />\n              <br />\n               <input\n                  type=\"file\"\n                  name=\"myImage\"\n                  onChange={(event) => {\n                      console.log(event.target.files[0]);\n                      setSelectedImage(event.target.files[0]);\n                  }}\n              />\n          </div>\n      );\n      const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n       const openImgEditor = () => {\n          setIsImgEditorShown(true);\n      };\n       const closeImgEditor = () => {\n          setIsImgEditorShown(false);\n      };\n       return (\n          <div>\n              <button onClick={openImgEditor}>Open Filerobot image editor</button>\n              {isImgEditorShown && (\n                  <FilerobotImageEditor\n                      source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                      onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                      onClose={closeImgEditor}\n                      annotationsCommon={{\n                          fill: '#ff0000'\n                      }}\n                      Text={{ text: 'Filerobot...' }}\n                      Crop={{\n                          presetsItems: [\n                              {\n                                  titleKey: 'classicTv',\n                                  descriptionKey: '4:3',\n                                  ratio: 4 / 3,\n                                  // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                              },\n                              {\n                                  titleKey: 'cinemascope',\n                                  descriptionKey: '21:9',\n                                  ratio: 21 / 9,\n                                  // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                              },\n                          ],\n                          presetsFolders: [\n                              {\n                                  titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                  // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                  groups: [\n                                      {\n                                          titleKey: 'facebook',\n                                          items: [\n                                              {\n                                                  titleKey: 'profile',\n                                                  width: 180,\n                                                  height: 180,\n                                                  descriptionKey: 'fbProfileSize',\n                                              },\n                                              {\n                                                  titleKey: 'coverPhoto',\n                                                  width: 820,\n                                                  height: 312,\n                                                  descriptionKey: 'fbCoverPhotoSize',\n                                              },\n                                          ],\n                                      },\n                                  ],\n                              },\n                          ],\n                      }}\n                      tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                      defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                      defaultToolId={TOOLS.TEXT} // or 'Text'\n                  />\n              )}\n          </div>\n      );*/\n};\n_c = UploadAndDisplayImage;\nexport default UploadAndDisplayImage;\nvar _c;\n$RefreshReg$(_c, \"UploadAndDisplayImage\");","map":{"version":3,"names":["React","useState","canvas","FilerobotImageEditor","TABS","TOOLS","jsxDEV","_jsxDEV","UploadAndDisplayImage","document","getElementById","onchange","e","img","Image","onload","draw","onerror","failed","src","URL","createObjectURL","files","width","height","ctx","getContext","drawImage","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/redundunt/WebstormProjects/untitled/src/components/Button.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport canvas from \"react\";\n\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nconst UploadAndDisplayImage = () => {\n    document.getElementById('inp').onchange = function(e) {\n        var img = new Image();\n        img.onload = draw;\n        img.onerror = failed;\n        img.src = URL.createObjectURL(this.files[0]);\n    };\n    function draw() {\n        var canvas = document.getElementById('canvas');\n        canvas.width = this.width;\n        canvas.height = this.height;\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(this, 0,0);\n    }\n    function failed() {\n        console.error(\"The provided file couldn't be loaded as an Image media\");\n    }\n    return (\n        <div>Hello</div>\n    );\n\n\n    /*    const [selectedImage, setSelectedImage] = useState(null);\n        return (\n            <div>\n                <h1>Upload and Display Image using React Hook's</h1>\n\n                {selectedImage && (\n                    <div>\n                        <img\n                            alt=\"not found\"\n                            width={\"250px\"}\n                            src={URL.createObjectURL(selectedImage)}\n                        />\n\n\n                        <br />\n                        <button onClick={() => setSelectedImage(null)}>Remove</button>\n                        <img\n                            alt=\"not found\"\n                            width={\"250px\"}\n                            src={URL.createObjectURL(selectedImage)}\n                        />\n                    </div>\n                )}\n\n                <br />\n                <br />\n\n                <input\n                    type=\"file\"\n                    name=\"myImage\"\n                    onChange={(event) => {\n                        console.log(event.target.files[0]);\n                        setSelectedImage(event.target.files[0]);\n                    }}\n                />\n            </div>\n        );\n        const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n\n        const openImgEditor = () => {\n            setIsImgEditorShown(true);\n        };\n\n        const closeImgEditor = () => {\n            setIsImgEditorShown(false);\n        };\n\n        return (\n            <div>\n                <button onClick={openImgEditor}>Open Filerobot image editor</button>\n                {isImgEditorShown && (\n                    <FilerobotImageEditor\n                        source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                        onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                        onClose={closeImgEditor}\n                        annotationsCommon={{\n                            fill: '#ff0000'\n                        }}\n                        Text={{ text: 'Filerobot...' }}\n                        Crop={{\n                            presetsItems: [\n                                {\n                                    titleKey: 'classicTv',\n                                    descriptionKey: '4:3',\n                                    ratio: 4 / 3,\n                                    // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                                },\n                                {\n                                    titleKey: 'cinemascope',\n                                    descriptionKey: '21:9',\n                                    ratio: 21 / 9,\n                                    // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                                },\n                            ],\n                            presetsFolders: [\n                                {\n                                    titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                    // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                    groups: [\n                                        {\n                                            titleKey: 'facebook',\n                                            items: [\n                                                {\n                                                    titleKey: 'profile',\n                                                    width: 180,\n                                                    height: 180,\n                                                    descriptionKey: 'fbProfileSize',\n                                                },\n                                                {\n                                                    titleKey: 'coverPhoto',\n                                                    width: 820,\n                                                    height: 312,\n                                                    descriptionKey: 'fbCoverPhotoSize',\n                                                },\n                                            ],\n                                        },\n                                    ],\n                                },\n                            ],\n                        }}\n                        tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                        defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                        defaultToolId={TOOLS.TEXT} // or 'Text'\n                    />\n                )}\n            </div>\n        );*/\n};\n\nexport default UploadAndDisplayImage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,OAAO;AAE1B,OAAOC,oBAAoB,IAAIC,IAAI,EAAEC,KAAK,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAChCC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,QAAQ,GAAG,UAASC,CAAC,EAAE;IAClD,IAAIC,GAAG,GAAG,IAAIC,KAAK,EAAE;IACrBD,GAAG,CAACE,MAAM,GAAGC,IAAI;IACjBH,GAAG,CAACI,OAAO,GAAGC,MAAM;IACpBL,GAAG,CAACM,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC;EACD,SAASN,IAAIA,CAAA,EAAG;IACZ,IAAId,MAAM,GAAGO,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAC9CR,MAAM,CAACqB,KAAK,GAAG,IAAI,CAACA,KAAK;IACzBrB,MAAM,CAACsB,MAAM,GAAG,IAAI,CAACA,MAAM;IAC3B,IAAIC,GAAG,GAAGvB,MAAM,CAACwB,UAAU,CAAC,IAAI,CAAC;IACjCD,GAAG,CAACE,SAAS,CAAC,IAAI,EAAE,CAAC,EAAC,CAAC,CAAC;EAC5B;EACA,SAAST,MAAMA,CAAA,EAAG;IACdU,OAAO,CAACC,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EACA,oBACItB,OAAA;IAAAuB,QAAA,EAAK;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;;EAIpjII3B,qBAAqB;AAmI3B,eAAeA,qBAAqB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}