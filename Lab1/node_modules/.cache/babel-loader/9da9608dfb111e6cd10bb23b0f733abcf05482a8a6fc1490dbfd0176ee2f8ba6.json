{"ast":null,"code":"var _jsxFileName = \"/home/redundunt/WebstormProjects/untitled/src/components/Button.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadAndDisplayImage = () => {\n  _s();\n  /*    const [selectedImage, setSelectedImage] = useState(null);\n      return (\n          <div>\n              <h1>Upload and Display Image using React Hook's</h1>\n  \n              {selectedImage && (\n                  <div>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n  \n  \n                      <br />\n                      <button onClick={() => setSelectedImage(null)}>Remove</button>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n                  </div>\n              )}\n  \n              <br />\n              <br />\n  \n              <input\n                  type=\"file\"\n                  name=\"myImage\"\n                  onChange={(event) => {\n                      console.log(event.target.files[0]);\n                      setSelectedImage(event.target.files[0]);\n                  }}\n              />\n          </div>\n      );*/\n  const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n  const openImgEditor = () => {\n    setIsImgEditorShown(true);\n  };\n  const closeImgEditor = () => {\n    setIsImgEditorShown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openImgEditor,\n      children: \"Open Filerobot image editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), isImgEditorShown && /*#__PURE__*/_jsxDEV(FilerobotImageEditor, {\n      source: \"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\",\n      onSave: (editedImageObject, designState) => console.log('saved', editedImageObject, designState),\n      onClose: closeImgEditor,\n      annotationsCommon: {\n        fill: '#ff0000'\n      },\n      Text: {\n        text: 'Filerobot...'\n      },\n      Crop: {\n        presetsItems: [{\n          titleKey: 'classicTv',\n          descriptionKey: '4:3',\n          ratio: 4 / 3\n          // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n        }, {\n          titleKey: 'cinemascope',\n          descriptionKey: '21:9',\n          ratio: 21 / 9\n          // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n        }],\n\n        presetsFolders: [{\n          titleKey: 'socialMedia',\n          // will be translated into Social Media as backend contains this translation key\n          // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n          groups: [{\n            titleKey: 'facebook',\n            items: [{\n              titleKey: 'profile',\n              width: 180,\n              height: 180,\n              descriptionKey: 'fbProfileSize'\n            }, {\n              titleKey: 'coverPhoto',\n              width: 820,\n              height: 312,\n              descriptionKey: 'fbCoverPhotoSize'\n            }]\n          }]\n        }]\n      },\n      tabsIds: [TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK] // or {['Adjust', 'Annotate', 'Watermark']}\n      ,\n      defaultTabId: TABS.ANNOTATE // or 'Annotate'\n      ,\n      defaultToolId: TOOLS.TEXT // or 'Text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadAndDisplayImage, \"F6EIjMBqF0IEbzCyZzo5TdVj1Yw=\");\n_c = UploadAndDisplayImage;\nexport default UploadAndDisplayImage;\nvar _c;\n$RefreshReg$(_c, \"UploadAndDisplayImage\");","map":{"version":3,"names":["React","useState","FilerobotImageEditor","TABS","TOOLS","jsxDEV","_jsxDEV","UploadAndDisplayImage","_s","isImgEditorShown","setIsImgEditorShown","openImgEditor","closeImgEditor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","source","onSave","editedImageObject","designState","console","log","onClose","annotationsCommon","fill","Text","text","Crop","presetsItems","titleKey","descriptionKey","ratio","presetsFolders","groups","items","width","height","tabsIds","ADJUST","ANNOTATE","WATERMARK","defaultTabId","defaultToolId","TEXT","_c","$RefreshReg$"],"sources":["/home/redundunt/WebstormProjects/untitled/src/components/Button.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nconst UploadAndDisplayImage = () => {\n\n\n/*    const [selectedImage, setSelectedImage] = useState(null);\n    return (\n        <div>\n            <h1>Upload and Display Image using React Hook's</h1>\n\n            {selectedImage && (\n                <div>\n                    <img\n                        alt=\"not found\"\n                        width={\"250px\"}\n                        src={URL.createObjectURL(selectedImage)}\n                    />\n\n\n                    <br />\n                    <button onClick={() => setSelectedImage(null)}>Remove</button>\n                    <img\n                        alt=\"not found\"\n                        width={\"250px\"}\n                        src={URL.createObjectURL(selectedImage)}\n                    />\n                </div>\n            )}\n\n            <br />\n            <br />\n\n            <input\n                type=\"file\"\n                name=\"myImage\"\n                onChange={(event) => {\n                    console.log(event.target.files[0]);\n                    setSelectedImage(event.target.files[0]);\n                }}\n            />\n        </div>\n    );*/\n    const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n\n    const openImgEditor = () => {\n        setIsImgEditorShown(true);\n    };\n\n    const closeImgEditor = () => {\n        setIsImgEditorShown(false);\n    };\n\n    return (\n        <div>\n            <button onClick={openImgEditor}>Open Filerobot image editor</button>\n            {isImgEditorShown && (\n                <FilerobotImageEditor\n                    source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                    onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                    onClose={closeImgEditor}\n                    annotationsCommon={{\n                        fill: '#ff0000'\n                    }}\n                    Text={{ text: 'Filerobot...' }}\n                    Crop={{\n                        presetsItems: [\n                            {\n                                titleKey: 'classicTv',\n                                descriptionKey: '4:3',\n                                ratio: 4 / 3,\n                                // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                            },\n                            {\n                                titleKey: 'cinemascope',\n                                descriptionKey: '21:9',\n                                ratio: 21 / 9,\n                                // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                            },\n                        ],\n                        presetsFolders: [\n                            {\n                                titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                groups: [\n                                    {\n                                        titleKey: 'facebook',\n                                        items: [\n                                            {\n                                                titleKey: 'profile',\n                                                width: 180,\n                                                height: 180,\n                                                descriptionKey: 'fbProfileSize',\n                                            },\n                                            {\n                                                titleKey: 'coverPhoto',\n                                                width: 820,\n                                                height: 312,\n                                                descriptionKey: 'fbCoverPhotoSize',\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                        ],\n                    }}\n                    tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                    defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                    defaultToolId={TOOLS.TEXT} // or 'Text'\n                />\n            )}\n        </div>\n    );\n};\n\nexport default UploadAndDisplayImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,oBAAoB,IAAIC,IAAI,EAAEC,KAAK,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxBD,mBAAmB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzBF,mBAAmB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACIJ,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAQQ,OAAO,EAAEH,aAAc;MAAAE,QAAA,EAAC;IAA2B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACnET,gBAAgB,iBACbH,OAAA,CAACJ,oBAAoB;MACjBiB,MAAM,EAAC,gEAAgE;MACvEC,MAAM,EAAEA,CAACC,iBAAiB,EAAEC,WAAW,KAAKC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,iBAAiB,EAAEC,WAAW,CAAE;MACjGG,OAAO,EAAEb,cAAe;MACxBc,iBAAiB,EAAE;QACfC,IAAI,EAAE;MACV,CAAE;MACFC,IAAI,EAAE;QAAEC,IAAI,EAAE;MAAe,CAAE;MAC/BC,IAAI,EAAE;QACFC,YAAY,EAAE,CACV;UACIC,QAAQ,EAAE,WAAW;UACrBC,cAAc,EAAE,KAAK;UACrBC,KAAK,EAAE,CAAC,GAAG;UACX;QACJ,CAAC,EACD;UACIF,QAAQ,EAAE,aAAa;UACvBC,cAAc,EAAE,MAAM;UACtBC,KAAK,EAAE,EAAE,GAAG;UACZ;QACJ,CAAC,CACJ;;QACDC,cAAc,EAAE,CACZ;UACIH,QAAQ,EAAE,aAAa;UAAE;UACzB;UACAI,MAAM,EAAE,CACJ;YACIJ,QAAQ,EAAE,UAAU;YACpBK,KAAK,EAAE,CACH;cACIL,QAAQ,EAAE,SAAS;cACnBM,KAAK,EAAE,GAAG;cACVC,MAAM,EAAE,GAAG;cACXN,cAAc,EAAE;YACpB,CAAC,EACD;cACID,QAAQ,EAAE,YAAY;cACtBM,KAAK,EAAE,GAAG;cACVC,MAAM,EAAE,GAAG;cACXN,cAAc,EAAE;YACpB,CAAC;UAET,CAAC;QAET,CAAC;MAET,CAAE;MACFO,OAAO,EAAE,CAACrC,IAAI,CAACsC,MAAM,EAAEtC,IAAI,CAACuC,QAAQ,EAAEvC,IAAI,CAACwC,SAAS,CAAE,CAAC;MAAA;MACvDC,YAAY,EAAEzC,IAAI,CAACuC,QAAS,CAAC;MAAA;MAC7BG,aAAa,EAAEzC,KAAK,CAAC0C,IAAK,CAAC;IAAA;MAAA/B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAElC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACV,EAAA,CA9GID,qBAAqB;AAAAwC,EAAA,GAArBxC,qBAAqB;AAgH3B,eAAeA,qBAAqB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}