{"ast":null,"code":"import React, { useState } from \"react\";\nimport canvas from \"react\";\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nconst UploadAndDisplayImage = () => {\n  var reader = new FileReader();\n  reader.onload = function (event) {\n    var img = new Image();\n    img.onload = function () {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      var reader = new FileReader();\n      reader.onload = function (event) {\n        var img = new Image();\n        img.onload = function () {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          ctx.drawImage(img, 0, 0);\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(e.target.files[0]);\n      ctx.drawImage(img, 0, 0);\n    };\n    img.src = event.target.result;\n  };\n  reader.readAsDataURL(e.target.files[0]);\n\n  /*    const [selectedImage, setSelectedImage] = useState(null);\n      return (\n          <div>\n              <h1>Upload and Display Image using React Hook's</h1>\n               {selectedImage && (\n                  <div>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n                        <br />\n                      <button onClick={() => setSelectedImage(null)}>Remove</button>\n                      <img\n                          alt=\"not found\"\n                          width={\"250px\"}\n                          src={URL.createObjectURL(selectedImage)}\n                      />\n                  </div>\n              )}\n               <br />\n              <br />\n               <input\n                  type=\"file\"\n                  name=\"myImage\"\n                  onChange={(event) => {\n                      console.log(event.target.files[0]);\n                      setSelectedImage(event.target.files[0]);\n                  }}\n              />\n          </div>\n      );\n      const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n       const openImgEditor = () => {\n          setIsImgEditorShown(true);\n      };\n       const closeImgEditor = () => {\n          setIsImgEditorShown(false);\n      };\n       return (\n          <div>\n              <button onClick={openImgEditor}>Open Filerobot image editor</button>\n              {isImgEditorShown && (\n                  <FilerobotImageEditor\n                      source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                      onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                      onClose={closeImgEditor}\n                      annotationsCommon={{\n                          fill: '#ff0000'\n                      }}\n                      Text={{ text: 'Filerobot...' }}\n                      Crop={{\n                          presetsItems: [\n                              {\n                                  titleKey: 'classicTv',\n                                  descriptionKey: '4:3',\n                                  ratio: 4 / 3,\n                                  // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                              },\n                              {\n                                  titleKey: 'cinemascope',\n                                  descriptionKey: '21:9',\n                                  ratio: 21 / 9,\n                                  // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                              },\n                          ],\n                          presetsFolders: [\n                              {\n                                  titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                  // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                  groups: [\n                                      {\n                                          titleKey: 'facebook',\n                                          items: [\n                                              {\n                                                  titleKey: 'profile',\n                                                  width: 180,\n                                                  height: 180,\n                                                  descriptionKey: 'fbProfileSize',\n                                              },\n                                              {\n                                                  titleKey: 'coverPhoto',\n                                                  width: 820,\n                                                  height: 312,\n                                                  descriptionKey: 'fbCoverPhotoSize',\n                                              },\n                                          ],\n                                      },\n                                  ],\n                              },\n                          ],\n                      }}\n                      tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                      defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                      defaultToolId={TOOLS.TEXT} // or 'Text'\n                  />\n              )}\n          </div>\n      );*/\n};\n_c = UploadAndDisplayImage;\nexport default UploadAndDisplayImage;\nvar _c;\n$RefreshReg$(_c, \"UploadAndDisplayImage\");","map":{"version":3,"names":["React","useState","canvas","FilerobotImageEditor","TABS","TOOLS","UploadAndDisplayImage","reader","FileReader","onload","event","img","Image","width","height","ctx","drawImage","src","target","result","readAsDataURL","e","files","_c","$RefreshReg$"],"sources":["/home/redundunt/WebstormProjects/untitled/src/components/Button.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport canvas from \"react\";\n\nimport FilerobotImageEditor, { TABS, TOOLS } from 'react-filerobot-image-editor';\nconst UploadAndDisplayImage = () => {\n    var reader = new FileReader();\n    reader.onload = function(event){\n        var img = new Image();\n        img.onload = function(){\n            canvas.width = img.width;\n            canvas.height = img.height;var reader = new FileReader();\n    reader.onload = function(event){\n        var img = new Image();\n        img.onload = function(){\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img,0,0);\n        }\n        img.src = event.target.result;\n    }\n    reader.readAsDataURL(e.target.files[0]); \n            ctx.drawImage(img,0,0);\n        }\n        img.src = event.target.result;\n    }\n    reader.readAsDataURL(e.target.files[0]);\n\n\n    /*    const [selectedImage, setSelectedImage] = useState(null);\n        return (\n            <div>\n                <h1>Upload and Display Image using React Hook's</h1>\n\n                {selectedImage && (\n                    <div>\n                        <img\n                            alt=\"not found\"\n                            width={\"250px\"}\n                            src={URL.createObjectURL(selectedImage)}\n                        />\n\n\n                        <br />\n                        <button onClick={() => setSelectedImage(null)}>Remove</button>\n                        <img\n                            alt=\"not found\"\n                            width={\"250px\"}\n                            src={URL.createObjectURL(selectedImage)}\n                        />\n                    </div>\n                )}\n\n                <br />\n                <br />\n\n                <input\n                    type=\"file\"\n                    name=\"myImage\"\n                    onChange={(event) => {\n                        console.log(event.target.files[0]);\n                        setSelectedImage(event.target.files[0]);\n                    }}\n                />\n            </div>\n        );\n        const [isImgEditorShown, setIsImgEditorShown] = useState(false);\n\n        const openImgEditor = () => {\n            setIsImgEditorShown(true);\n        };\n\n        const closeImgEditor = () => {\n            setIsImgEditorShown(false);\n        };\n\n        return (\n            <div>\n                <button onClick={openImgEditor}>Open Filerobot image editor</button>\n                {isImgEditorShown && (\n                    <FilerobotImageEditor\n                        source=\"https://scaleflex.airstore.io/demo/stephen-walker-unsplash.jpg\"\n                        onSave={(editedImageObject, designState) => console.log('saved', editedImageObject, designState)}\n                        onClose={closeImgEditor}\n                        annotationsCommon={{\n                            fill: '#ff0000'\n                        }}\n                        Text={{ text: 'Filerobot...' }}\n                        Crop={{\n                            presetsItems: [\n                                {\n                                    titleKey: 'classicTv',\n                                    descriptionKey: '4:3',\n                                    ratio: 4 / 3,\n                                    // icon: CropClassicTv, // optional, CropClassicTv is a React Function component. Possible (React Function component, string or HTML Element)\n                                },\n                                {\n                                    titleKey: 'cinemascope',\n                                    descriptionKey: '21:9',\n                                    ratio: 21 / 9,\n                                    // icon: CropCinemaScope, // optional, CropCinemaScope is a React Function component.  Possible (React Function component, string or HTML Element)\n                                },\n                            ],\n                            presetsFolders: [\n                                {\n                                    titleKey: 'socialMedia', // will be translated into Social Media as backend contains this translation key\n                                    // icon: Social, // optional, Social is a React Function component. Possible (React Function component, string or HTML Element)\n                                    groups: [\n                                        {\n                                            titleKey: 'facebook',\n                                            items: [\n                                                {\n                                                    titleKey: 'profile',\n                                                    width: 180,\n                                                    height: 180,\n                                                    descriptionKey: 'fbProfileSize',\n                                                },\n                                                {\n                                                    titleKey: 'coverPhoto',\n                                                    width: 820,\n                                                    height: 312,\n                                                    descriptionKey: 'fbCoverPhotoSize',\n                                                },\n                                            ],\n                                        },\n                                    ],\n                                },\n                            ],\n                        }}\n                        tabsIds={[TABS.ADJUST, TABS.ANNOTATE, TABS.WATERMARK]} // or {['Adjust', 'Annotate', 'Watermark']}\n                        defaultTabId={TABS.ANNOTATE} // or 'Annotate'\n                        defaultToolId={TOOLS.TEXT} // or 'Text'\n                    />\n                )}\n            </div>\n        );*/\n};\n\nexport default UploadAndDisplayImage;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,OAAO;AAE1B,OAAOC,oBAAoB,IAAIC,IAAI,EAAEC,KAAK,QAAQ,8BAA8B;AAChF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAChC,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;EAC7BD,MAAM,CAACE,MAAM,GAAG,UAASC,KAAK,EAAC;IAC3B,IAAIC,GAAG,GAAG,IAAIC,KAAK,EAAE;IACrBD,GAAG,CAACF,MAAM,GAAG,YAAU;MACnBP,MAAM,CAACW,KAAK,GAAGF,GAAG,CAACE,KAAK;MACxBX,MAAM,CAACY,MAAM,GAAGH,GAAG,CAACG,MAAM;MAAC,IAAIP,MAAM,GAAG,IAAIC,UAAU,EAAE;MAChED,MAAM,CAACE,MAAM,GAAG,UAASC,KAAK,EAAC;QAC3B,IAAIC,GAAG,GAAG,IAAIC,KAAK,EAAE;QACrBD,GAAG,CAACF,MAAM,GAAG,YAAU;UACnBP,MAAM,CAACW,KAAK,GAAGF,GAAG,CAACE,KAAK;UACxBX,MAAM,CAACY,MAAM,GAAGH,GAAG,CAACG,MAAM;UAC1BC,GAAG,CAACC,SAAS,CAACL,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC;QAC1B,CAAC;QACDA,GAAG,CAACM,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAACC,MAAM;MACjC,CAAC;MACDZ,MAAM,CAACa,aAAa,CAACC,CAAC,CAACH,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;MAC/BP,GAAG,CAACC,SAAS,CAACL,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC;IAC1B,CAAC;IACDA,GAAG,CAACM,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAACC,MAAM;EACjC,CAAC;EACDZ,MAAM,CAACa,aAAa,CAACC,CAAC,CAACH,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;;EAGvnIIjB,qBAAqB;AAqI3B,eAAeA,qBAAqB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}